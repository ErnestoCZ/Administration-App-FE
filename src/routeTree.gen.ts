/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserImport } from './routes/user'
import { Route as ConstantsImport } from './routes/constants'
import { Route as BillingsImport } from './routes/billings'
import { Route as BillingBillingIdImport } from './routes/billing.$billingId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const UserRoute = UserImport.update({
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const ConstantsRoute = ConstantsImport.update({
  path: '/constants',
  getParentRoute: () => rootRoute,
} as any)

const BillingsRoute = BillingsImport.update({
  path: '/billings',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const BillingBillingIdRoute = BillingBillingIdImport.update({
  path: '/billing/$billingId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/billings': {
      id: '/billings'
      path: '/billings'
      fullPath: '/billings'
      preLoaderRoute: typeof BillingsImport
      parentRoute: typeof rootRoute
    }
    '/constants': {
      id: '/constants'
      path: '/constants'
      fullPath: '/constants'
      preLoaderRoute: typeof ConstantsImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/billing/$billingId': {
      id: '/billing/$billingId'
      path: '/billing/$billingId'
      fullPath: '/billing/$billingId'
      preLoaderRoute: typeof BillingBillingIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/billings': typeof BillingsRoute
  '/constants': typeof ConstantsRoute
  '/user': typeof UserRoute
  '/about': typeof AboutLazyRoute
  '/billing/$billingId': typeof BillingBillingIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/billings': typeof BillingsRoute
  '/constants': typeof ConstantsRoute
  '/user': typeof UserRoute
  '/about': typeof AboutLazyRoute
  '/billing/$billingId': typeof BillingBillingIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/billings': typeof BillingsRoute
  '/constants': typeof ConstantsRoute
  '/user': typeof UserRoute
  '/about': typeof AboutLazyRoute
  '/billing/$billingId': typeof BillingBillingIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/billings'
    | '/constants'
    | '/user'
    | '/about'
    | '/billing/$billingId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/billings'
    | '/constants'
    | '/user'
    | '/about'
    | '/billing/$billingId'
  id:
    | '__root__'
    | '/'
    | '/billings'
    | '/constants'
    | '/user'
    | '/about'
    | '/billing/$billingId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  BillingsRoute: typeof BillingsRoute
  ConstantsRoute: typeof ConstantsRoute
  UserRoute: typeof UserRoute
  AboutLazyRoute: typeof AboutLazyRoute
  BillingBillingIdRoute: typeof BillingBillingIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  BillingsRoute: BillingsRoute,
  ConstantsRoute: ConstantsRoute,
  UserRoute: UserRoute,
  AboutLazyRoute: AboutLazyRoute,
  BillingBillingIdRoute: BillingBillingIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/billings",
        "/constants",
        "/user",
        "/about",
        "/billing/$billingId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/billings": {
      "filePath": "billings.tsx"
    },
    "/constants": {
      "filePath": "constants.tsx"
    },
    "/user": {
      "filePath": "user.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/billing/$billingId": {
      "filePath": "billing.$billingId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
